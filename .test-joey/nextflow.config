manifest {
  author = 'Marco De La Pierre'
  name = 'illumina-nf'
  description = 'Illumina pipeline for DPIRD'
  homePage = 'https://github.com/marcodelapierre/illumina-nf'

  nextflowVersion = '!>=20.07.1'
}

resume = true

trace {
  fields = 'name,hash,status,exit,realtime,submit'
}

profiles {

joey1 {
  process {
    withName: 'merge_interl|trim|map_contigs|map_refs|map_refs_cascade_bulk'        { container = 'quay.io/biocontainers/bbmap:38.93--he522d1c_0' }
    withName: 'qc_post_merge_interl|qc_post_trim'                                   { container = 'quay.io/biocontainers/fastqc:0.11.9--0' }
    withName: 'assemble'                                                            { container = 'quay.io/biocontainers/spades:3.15.3--h95f258a_0' }
    withName: 'sam_post_map_contigs|sam_post_map_refs|sam_post_seqfile|contigfile'  { container = 'quay.io/biocontainers/samtools:1.14--hb421002_0' }
    withName: 'bcf_post_map_contigs|bcf_post_map_refs'                              { container = 'quay.io/biocontainers/bcftools:1.14--h88f3f91_0' }
    withName: 'blast|seqfile'                                                       { container = 'quay.io/biocontainers/blast:2.12.0--pl5262h3289130_0' }
    withName: 'align'                                                               { container = 'ghcr.io/autamus/mafft:7.481' }
  }

  process {
    cache = 'lenient'
    stageInMode = 'symlink'
  }

  singularity {
    enabled = true
    envWhitelist = 'SINGULARITY_BINDPATH, SINGULARITYENV_LD_LIBRARY_PATH'
    cacheDir = "$HOME/.nextflow_singularity"
  }

  process {
    cpus = 1
    withName: 'assemble' {
      memory = '4GB'
    }
  }
}

joey2 {
  process {
    withName: 'merge_interl|trim|map_contigs|map_refs|map_refs_cascade_bulk'        { module = 'quay.io/biocontainers/bbmap/38.93--he522d1c_0' }
    withName: 'qc_post_merge_interl|qc_post_trim'                                   { module = 'quay.io/biocontainers/fastqc/0.11.9--0' }
    withName: 'assemble'                                                            { module = 'quay.io/biocontainers/spades/3.15.3--h95f258a_0' }
    withName: 'sam_post_map_contigs|sam_post_map_refs|sam_post_seqfile|contigfile'  { module = 'quay.io/biocontainers/samtools/1.14--hb421002_0' }
    withName: 'bcf_post_map_contigs|bcf_post_map_refs'                              { module = 'quay.io/biocontainers/bcftools/1.14--h88f3f91_0' }
    withName: 'blast|seqfile'                                                       { module = 'quay.io/biocontainers/blast/2.12.0--pl5262h3289130_0' }
    withName: 'align'                                                               { module = 'ghcr.io/autamus/mafft/7.481' }
  }

  process {
    cache = 'lenient'
    stageInMode = 'symlink'
  }

  process {
    cpus = 1
    withName: 'assemble' {
      memory = '4GB'
    }
  }
}

joey3 {
  process {
    withName: 'merge_interl|trim|map_contigs|map_refs|map_refs_cascade_bulk'        { container = 'quay.io/biocontainers/bbmap:38.93--he522d1c_0' }
    withName: 'qc_post_merge_interl|qc_post_trim'                                   { container = 'quay.io/biocontainers/fastqc:0.11.9--0' }
    withName: 'assemble'                                                            { container = 'quay.io/biocontainers/spades:3.15.3--h95f258a_0' }
    withName: 'sam_post_map_contigs|sam_post_map_refs|sam_post_seqfile|contigfile'  { container = 'quay.io/biocontainers/samtools:1.14--hb421002_0' }
    withName: 'bcf_post_map_contigs|bcf_post_map_refs'                              { container = 'quay.io/biocontainers/bcftools:1.14--h88f3f91_0' }
    withName: 'blast|seqfile'                                                       { container = 'quay.io/biocontainers/blast:2.12.0--pl5262h3289130_0' }
    withName: 'align'                                                               { container = 'ghcr.io/autamus/mafft:7.481' }
  }

  process {
    cache = 'lenient'
    stageInMode = 'symlink'
  }
  
  singularity {
    enabled = true
    envWhitelist = 'SINGULARITY_BINDPATH, SINGULARITYENV_LD_LIBRARY_PATH'
    cacheDir = "$HOME/.nextflow_singularity"
  }

  params.slurm_account = 'pawsey0001'
  process {
    executor = 'slurm'
    clusterOptions = "--account=${params.slurm_account}"
    queue = 'work'
    cpus = 1
    time = '30m'
    memory = '10GB'
    withName: 'merge_interl|trim' {
      time = '2h'
    }
    withName: 'assemble' {
      cpus = 4
      time = '1d'
      memory = '120GB'
    }
    withName: 'map_contigs' {
      cpus = 16
      time = '16h'
    }
    withName: 'bcf_post_map_contigs' {
      time = '12h'
    }
    withName: 'blast' {
      time = '6h'
      memory = '60GB'
    }
    withName: 'map_refs' {
      time = '4h'
    }
    withName: 'map_refs_cascade_bulk' {
      queue = 'long'
      time = '4d'
    }
    withName: 'bcf_post_map_refs' {
      time = '3h'
    }
    withName: 'align' {
      time = '1d'
      memory = '50GB'
    }
  }
  executor {
    $slurm {
      queueSize = 512
    }
  }
}

}
