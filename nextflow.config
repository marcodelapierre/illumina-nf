manifest {
  author = 'Marco De La Pierre'
  name = 'illumina-nf'
  description = 'Illumina pipeline for DPIRD'
  homePage = 'https://github.com/marcodelapierre/illumina-nf'

  nextflowVersion = '!>=20.07.1'
}

resume = true

trace {
  fields = 'name,hash,status,exit,realtime,submit'
}

process {
  withName: 'merge_reads|trim|map_contigs|map_refs'                               { container = 'quay.io/biocontainers/bbmap:38.20--h470a237_0' }
  withName: 'qc_post_merge|qc_post_trim'                                          { container = 'quay.io/biocontainers/fastqc:0.11.7--4' }
  withName: 'assemble'                                                            { container = 'quay.io/biocontainers/spades:3.12.0--1' }
  withName: 'sam_post_map_contigs|sam_post_map_refs|sam_post_seqfile|contigfile'  { container = 'dpirdmk/samtools:1.9' }
  withName: 'bcf_post_map_contigs|bcf_post_map_refs'                              { container = 'dpirdmk/bcftools:1.8' }
  withName: 'blast|seqfile'                                                       { container = 'quay.io/biocontainers/blast:2.7.1--h96bfa4b_5' }
  withName: 'align'                                                               { container = 'quay.io/biocontainers/mafft:7.407--0' }
}


profiles {

zeus {
  workDir = "$MYSCRATCH/nxf_work"
  process {
    cache = 'lenient'
    stageInMode = 'symlink'
  }
  
  params {
    blast_db='/group/data/blast/nt'
  }
  
  singularity {
    enabled = true
    envWhitelist = 'SINGULARITY_BINDPATH, SINGULARITYENV_LD_LIBRARY_PATH'
    cacheDir = "$NXF_HOME/singularity"
  }
  process.module = 'singularity'

  params.slurm_account = 'pawsey0281'
  process {
    executor = 'slurm'
    clusterOptions = "--account=${params.slurm_account}"
    queue = 'workq'
    cpus = 1
    time = '2h'
    memory = '10GB'
    withName: 'assemble' {
      cpus = 4
      time = '1d'
      memory = '60GB'
    }
    withName: 'blast' {
      time = '6h'
      memory = '60GB'
    }
  }
  executor {
    $slurm {
      queueSize = 512
    }
  }
}

nimbus {
  workDir = '/data/work/temp/nxf_work'
  process.cache = 'lenient'
    
  params {
    blast_db='/data/work/databases/blast/nt'
  } 
  
  docker {
    enabled = true
    runOptions = '-u $(id -u):$(id -g) -v /data/work:/data/work'
  }

  process {
    cpus = 1
    withName: 'assemble' {
      memory = '4GB'
    }
  }
}

k8s {
  workDir = '/data/nxf_work'
  process.cache = 'lenient'
  
  params {
    blast_db=''
    mount_point='/data'
    claim_name='nxf-vol-claim'
  }
  
  docker {
    enabled = true
    runOptions = "-v ${params.mount_point}"
  }
  
  process {
    cpus = 1
    withName: 'assemble' {
      memory = '4GB'
    }
    executor = 'k8s'
  }
  k8s {
    storageClaimName = "${params.claim_name}"
    storageMountPath = "${params.mount_point}"
  }
}

test_zeus {
  process {
    cache = 'lenient'
    stageInMode = 'symlink'
  }
  
  singularity {
    enabled = true
    envWhitelist = 'SINGULARITY_BINDPATH, SINGULARITYENV_LD_LIBRARY_PATH'
    cacheDir = "$NXF_HOME/singularity"
  }
  process.module = 'singularity'

  process {
    cpus = 1
    withName: 'assemble' {
      memory = '4GB'
    }
  }
}

test_nimbus {
  process.cache = 'lenient'

  docker {
    enabled = true
    runOptions = '-u $(id -u):$(id -g) -v /data/work:/data/work'
  }

  process {
    cpus = 1
    withName: 'assemble' {
      memory = '4GB'
    }
  }
}

}
